version: '3.8'

services:
  web:
    build: .
    restart: unless-stopped
    container_name: server
    command: >
      sh -c "python manage.py migrate && 
             gunicorn --bind 0.0.0.0:80 payday.wsgi:application"
    volumes:
      - .:/app
    ports:
      - "80:80"
    depends_on:
      - pgbouncer
      - redis
      - minio
    env_file:
      - .env.server

  worker:
    build: .
    restart: unless-stopped
    container_name: worker
    command: celery -A payday worker -l INFO -E
    volumes:
      - .:/app
    depends_on:
      - pgbouncer
      - redis
      - minio
    env_file:
      - .env.worker

  primary:
    image: postgres:latest
    restart: unless-stopped
    container_name: primary
    port:
      - "5433:5432"
    volumes:
      - ./postgres/primary/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/primary/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - primary:/var/lib/postgresql/primary
    environment:
      - POSTGRES_DB=primary
      - POSTGRES_USER=payday
      - POSTGRES_PASSWORD=payday
      - PGDATA=/var/lib/postgresql/primary

  replica:
    image: postgres:latest
    restart: unless-stopped
    container_name: replica
    port:
      - "5433:5432"
    volumes:
      - ./postgres/replica/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/replica/recovery.conf:/etc/postgresql/recovery.conf
      - replica:/var/lib/postgresql/replica
    environment:
      - POSTGRES_DB=replica
      - POSTGRES_USER=payday
      - POSTGRES_PASSWORD=payday
      - PRIMARY_HOST=primary
      - PGDATA=/var/lib/postgresql/replica
    depends_on:
      - primary

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    restart: unless-stopped
    ports:
      - "6432:6432"
    volumes:
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    environment:
      - DB_PASSWORD=payday
      - DB_HOST=primary
      - DB_USER=payday
      - DB_PORT=5432
    depends_on:
      - primary
      - replica
  
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_OPTS=--address :9000 --console-address :9001
    command: server /data --address :9000 --console-address ":9001"
    volumes:
      - minio:/data
      - ./bucket.sh:/docker-entrypoint-init.d/bucket.sh

  minio-init:
    build:
      context: .
      dockerfile: Miniofile
    depends_on:
      - minio
    environment:
      MINIO_BUCKET_NAME: payday
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

volumes:
  primary:
  replica:
  minio:
