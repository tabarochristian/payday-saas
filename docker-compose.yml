services:
  wordpress:
    container_name: payday-wordpress
    image: wordpress:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - wordpress.env
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mariadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  mariadb:
    container_name: payday-mariadb
    restart: unless-stopped
    image: mariadb:latest
    env_file:
      - wordpress.env
    volumes:
      - mariadb_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    expose:
      - 3306

  db:
    container_name: payday-db
    image: postgres:16
    restart: unless-stopped
    env_file:
      - db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgbouncer:
    container_name: payday-pgbouncer
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    ports:
      - "6432:6432"
    volumes:
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    env_file:
      - pgbouncer.env
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h db -p 5432"]
      interval: 30s
      timeout: 10s
      retries: 3

  saas:
    container_name: payday-saas
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: sh -c "daphne -b 0.0.0.0 -p 8000 payday.asgi:application"
    volumes:
      - ./payday:/app
    ports:
      - "8000:8000"
    depends_on:
      - pgbouncer
      - redis
    env_file:
      - saas.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    container_name: payday-celery
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: celery -A payday worker -l INFO -E
    volumes:
      - ./payday:/app
    depends_on:
      - redis
      - saas
    env_file:
      - saas.env
    healthcheck:
      test: ["CMD", "celery", "-A", "payday", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  flower:
    container_name: payday-flower
    image: mher/flower:latest
    restart: unless-stopped
    command: ["celery", "flower", "--broker=redis://redis:6379/0", "--port=5555"]
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    container_name: payday-redis
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  lago:
    container_name: payday-lago
    image: getlago/lago:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - saas.env
    depends_on:
      - pgbouncer
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n:
    container_name: payday-n8n
    image: n8nio/n8n:latest
    restart: unless-stopped
    ports:
      - "5678:5678"
    env_file:
      - n8n.env
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - pgbouncer
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    container_name: payday-minio
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - minio.env
    command: server /data --address :9000 --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    container_name: payday-nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - wordpress
      - saas
      - lago
      - minio
      - celery
      - n8n
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  uptime:
    container_name: payday-uptime
    image: louislam/uptime-kuma:latest
    restart: unless-stopped
    ports:
      - "6000:3001"
    volumes:
      - uptimekuma_data:/app/data
    env_file:
      - uptime.env
    depends_on:
      - saas
      - wordpress
      - lago
      - nginx
      - db
      - redis
      - minio
      - celery
      - n8n
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6000"]
      interval: 30s
      timeout: 10s
      retries: 3

  certbot:
    container_name: payday-certbot
    build:
      context: .
      dockerfile: certbot/Dockerfile
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/digitalocean.ini:/etc/letsencrypt/digitalocean.ini

volumes:
  uptimekuma_data:
  wordpress_data:
  postgres_data:
  mariadb_data:
  minio_data:
  n8n_data: