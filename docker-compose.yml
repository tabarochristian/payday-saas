services:
  db:
    container_name: payday-db
    image: postgres:16
    restart: unless-stopped
    env_file:
      - db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik-net

  redis:
    container_name: payday-redis
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik-net

  mariadb:
    container_name: payday-mariadb
    restart: unless-stopped
    image: mariadb:latest
    env_file:
      - wordpress.env
    volumes:
      - mariadb_data:/var/lib/mysql
    healthcheck:
      # test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    expose:
      - 3306
    networks:
      - traefik-net

  pgbouncer:
    container_name: payday-pgbouncer
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    ports:
      - "6432:6432"
    volumes:
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    env_file:
      - pgbouncer.env
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h db -p 5432"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik-net

  wordpress:
    container_name: payday-wordpress
    image: wordpress:latest
    restart: unless-stopped
    env_file:
      - wordpress.env
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mariadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=Host(`payday.cd`)"
      - "traefik.http.routers.wordpress.entrypoints=web"
      - "traefik.http.routers.wordpress.service=wordpress"
      - "traefik.http.services.wordpress.loadbalancer.server.port=80"
    networks:
      - traefik-net

  minio:
    container_name: payday-minio
    image: minio/minio:latest
    restart: unless-stopped
    env_file:
      - minio.env
    command: server /data --address :9000 --console-address :9001
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-console.rule=Host(`minio.payday.cd`)"
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-console.middlewares=minio-redirect"
      - "traefik.http.middlewares.minio-redirect.redirectregex.regex=^http://minio.payday.cd$$"
      - "traefik.http.middlewares.minio-redirect.redirectregex.replacement=http://minio.payday.cd/login"
      - "traefik.http.routers.minio-bucket.rule=Host(`cdn.payday.cd`)"
      - "traefik.http.routers.minio-bucket.entrypoints=web"
      - "traefik.http.routers.minio-bucket.service=minio-bucket"
      - "traefik.http.services.minio-bucket.loadbalancer.server.port=9000"
    networks:
      - traefik-net

  saas:
    container_name: payday-saas
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: sh -c "daphne -b 0.0.0.0 -p 8000 payday.asgi:application"
    volumes:
      - ./payday:/app
    depends_on:
      - pgbouncer
      - redis
    env_file:
      - saas.env
    healthcheck:
      # test: ["CMD", "curl", "-f", "http://localhost:8000/ht/"]
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.saas.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.payday.cd`) && !Host(`payday.cd`,`flower.payday.cd`,`lago.payday.cd`,`n8n.payday.cd`,`minio.payday.cd`,`cdn.payday.cd`,`uptime.payday.cd`,`traefik.payday.cd`)"
      - "traefik.http.routers.saas.entrypoints=web"
      - "traefik.http.routers.saas.service=saas"
      - "traefik.http.services.saas.loadbalancer.server.port=8000"
      - "traefik.http.services.saas.loadbalancer.sticky.cookie=true"
      - "traefik.http.routers.saas.transport.respondingTimeouts.readTimeout=0"
      - "traefik.http.routers.saas.transport.respondingTimeouts.writeTimeout=0"
      - "traefik.http.routers.saas.transport.respondingTimeouts.idleTimeout=0"
    networks:
      - traefik-net

  celery:
    container_name: payday-celery
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: celery -A payday worker -l INFO -E
    volumes:
      - ./payday:/app
    depends_on:
      - redis
      - saas
    env_file:
      - saas.env
    healthcheck:
      test: ["CMD", "celery", "-A", "payday", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik-net

  flower:
    container_name: payday-flower
    image: mher/flower:latest
    restart: unless-stopped
    command: ["celery", "flower", "--broker=redis://redis:6379/0", "--port=5555"]
    depends_on:
      - redis
      - celery
    healthcheck:
      # test: ["CMD", "curl", "-f", "http://localhost:5555"]
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.rule=Host(`flower.payday.cd`)"
      - "traefik.http.routers.flower.entrypoints=web"
      - "traefik.http.routers.flower.service=flower"
      - "traefik.http.services.flower.loadbalancer.server.port=5555"
    networks:
      - traefik-net

  lago:
    container_name: payday-lago
    image: getlago/lago:latest
    restart: unless-stopped
    env_file:
      - saas.env
    depends_on:
      - pgbouncer
    healthcheck:
      # test: ["CMD", "curl", "-f", "http://localhost:3000/healthcheck"]
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lago.rule=Host(`lago.payday.cd`)"
      - "traefik.http.routers.lago.entrypoints=web"
      - "traefik.http.routers.lago.service=lago"
      - "traefik.http.services.lago.loadbalancer.server.port=3000"
    networks:
      - traefik-net

  n8n:
    container_name: payday-n8n
    image: n8nio/n8n:latest
    restart: unless-stopped
    env_file:
      - n8n.env
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - pgbouncer
      - redis
    healthcheck:
      # test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.payday.cd`)"
      - "traefik.http.routers.n8n.entrypoints=web"
      - "traefik.http.routers.n8n.service=n8n"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    networks:
      - traefik-net

  uptime:
    container_name: payday-uptime
    image: louislam/uptime-kuma:latest
    restart: unless-stopped
    volumes:
      - uptimekuma_data:/app/data
    env_file:
      - uptime.env
    depends_on:
      - wordpress
      - minio
      - lago
      - n8n
      - saas
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime.rule=Host(`uptime.payday.cd`)"
      - "traefik.http.routers.uptime.entrypoints=web"
      - "traefik.http.routers.uptime.service=uptime"
      - "traefik.http.services.uptime.loadbalancer.server.port=3001"
    networks:
      - traefik-net

  traefik:
    container_name: payday-traefik
    image: traefik:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - wordpress
      - minio
      - lago
      - n8n
      - saas
      - flower
      - uptime
    healthcheck:
      # test: ["CMD", "curl", "-f", "http://localhost:80"]
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.payday.cd`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
    networks:
      - traefik-net

volumes:
  uptimekuma_data:
  wordpress_data:
  postgres_data:
  mariadb_data:
  minio_data:
  n8n_data:

networks:
  traefik-net:
    driver: bridge