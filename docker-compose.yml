services:
  db:
    container_name: payday-db
    image: postgres:16
    restart: unless-stopped
    env_file:
      - db.env
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    container_name: payday-redis
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mariadb:
    container_name: payday-mariadb
    restart: unless-stopped
    image: mariadb:latest
    env_file:
      - wordpress.env
    volumes:
      - mariadb_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    expose:
      - 3306

  pgbouncer:
    container_name: payday-pgbouncer
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    ports:
      - "6432:6432"
    volumes:
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    env_file:
      - pgbouncer.env
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h db -p 5432"]
      interval: 30s
      timeout: 10s
      retries: 3

  wordpress:
    container_name: payday-wordpress
    image: wordpress:latest
    restart: unless-stopped
    env_file:
      - wordpress.env
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mariadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress-http.rule=Host(`payday.cd`)"
      - "traefik.http.routers.wordpress-http.entrypoints=web"
      - "traefik.http.routers.wordpress-http.service=wordpress"
      - "traefik.http.routers.wordpress-http.priority=1000"
      - "traefik.http.routers.wordpress-https.rule=Host(`payday.cd`)"
      - "traefik.http.routers.wordpress-https.entrypoints=websecure"
      - "traefik.http.routers.wordpress-https.service=wordpress"
      - "traefik.http.routers.wordpress-https.priority=1000"
      - "traefik.http.routers.wordpress-https.tls=true"
      - "traefik.http.routers.wordpress-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.wordpress.loadbalancer.server.port=80"

  minio:
    container_name: payday-minio
    image: minio/minio:latest
    restart: unless-stopped
    env_file:
      - minio.env
    command: server /data --address :9000 --console-address :9001
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-console-http.rule=Host(`minio.payday.cd`)"
      - "traefik.http.routers.minio-console-http.entrypoints=web"
      - "traefik.http.routers.minio-console-http.service=minio-console"
      - "traefik.http.routers.minio-console-http.priority=1000"
      - "traefik.http.routers.minio-console-https.rule=Host(`minio.payday.cd`)"
      - "traefik.http.routers.minio-console-https.entrypoints=websecure"
      - "traefik.http.routers.minio-console-https.service=minio-console"
      - "traefik.http.routers.minio-console-https.priority=1000"
      - "traefik.http.routers.minio-console-https.tls=true"
      - "traefik.http.routers.minio-console-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-console-http.middlewares=minio-redirect"
      - "traefik.http.routers.minio-console-https.middlewares=minio-redirect"
      - "traefik.http.middlewares.minio-redirect.redirectregex.regex=^http(s)?://minio.payday.cd$$"
      - "traefik.http.middlewares.minio-redirect.redirectregex.replacement=http$${1}://minio.payday.cd/login"
      - "traefik.http.routers.minio-bucket-http.rule=Host(`cdn.payday.cd`)"
      - "traefik.http.routers.minio-bucket-http.entrypoints=web"
      - "traefik.http.routers.minio-bucket-http.service=minio-bucket"
      - "traefik.http.routers.minio-bucket-http.priority=1000"
      - "traefik.http.routers.minio-bucket-https.rule=Host(`cdn.payday.cd`)"
      - "traefik.http.routers.minio-bucket-https.entrypoints=websecure"
      - "traefik.http.routers.minio-bucket-https.service=minio-bucket"
      - "traefik.http.routers.minio-bucket-https.priority=1000"
      - "traefik.http.routers.minio-bucket-https.tls=true"
      - "traefik.http.routers.minio-bucket-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.minio-bucket.loadbalancer.server.port=9000"

  saas:
    container_name: payday-saas
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: sh -c "daphne -b 0.0.0.0 -p 8000 payday.asgi:application"
    volumes:
      - ./payday:/app
    depends_on:
      - pgbouncer
      - redis
    env_file:
      - saas.env
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "true"]
      interval: 15s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.saas-http.service=saas"
      - "traefik.http.routers.saas-http.entrypoints=web"
      - "traefik.http.routers.saas-http.priority=1"
      - "traefik.http.routers.saas-http.rule=HostRegexp(`{subdomain:[a-z]+}.payday.cd`)"
      - "traefik.http.routers.saas-https.service=saas"
      - "traefik.http.routers.saas-https.entrypoints=websecure"
      - "traefik.http.routers.saas-https.priority=1"
      - "traefik.http.routers.saas-https.rule=HostRegexp(`{subdomain:[a-z]+}.payday.cd`)"
      - "traefik.http.routers.saas-https.tls=true"
      - "traefik.http.routers.saas-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.saas-https.tls.domains[0].main=*.payday.cd"
      - "traefik.http.services.saas.loadbalancer.server.port=8000"

  celery:
    container_name: payday-celery
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: celery -A payday worker -l INFO -E
    volumes:
      - ./payday:/app
    depends_on:
      - redis
      - saas
    env_file:
      - saas.env
    healthcheck:
      test: ["CMD", "celery", "-A", "payday", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  flower:
    container_name: payday-flower
    image: mher/flower:latest
    restart: unless-stopped
    command: ["celery", "flower", "--broker=redis://redis:6379/0", "--port=5555"]
    depends_on:
      - redis
      - celery
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower-http.rule=Host(`flower.payday.cd`)"
      - "traefik.http.routers.flower-http.entrypoints=web"
      - "traefik.http.routers.flower-http.service=flower"
      - "traefik.http.routers.flower-http.priority=1000"
      - "traefik.http.routers.flower-https.rule=Host(`flower.payday.cd`)"
      - "traefik.http.routers.flower-https.entrypoints=websecure"
      - "traefik.http.routers.flower-https.service=flower"
      - "traefik.http.routers.flower-https.priority=1000"
      - "traefik.http.routers.flower-https.tls=true"
      - "traefik.http.routers.flower-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.flower.loadbalancer.server.port=5555"

  lago:
    container_name: payday-lago
    restart: unless-stopped
    image: getlago/lago
    env_file:
      - lago.env
    depends_on:
      - redis
      - db
    healthcheck:
      test: ["CMD", "true"]
      interval: 10s
      timeout: 10s
      retries: 10
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lago-ui-http.rule=Host(`lago.payday.cd`)"
      - "traefik.http.routers.lago-ui-http.entrypoints=web"
      - "traefik.http.routers.lago-ui-http.service=lago-ui"
      - "traefik.http.routers.lago-ui-http.priority=1000"
      - "traefik.http.routers.lago-ui-https.rule=Host(`lago.payday.cd`)"
      - "traefik.http.routers.lago-ui-https.entrypoints=websecure"
      - "traefik.http.routers.lago-ui-https.service=lago-ui"
      - "traefik.http.routers.lago-ui-https.priority=1000"
      - "traefik.http.routers.lago-ui-https.tls=true"
      - "traefik.http.routers.lago-ui-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.lago-ui.loadbalancer.server.port=80"
      - "traefik.http.routers.lago-api-http.rule=Host(`api.lago.payday.cd`)"
      - "traefik.http.routers.lago-api-http.entrypoints=web"
      - "traefik.http.routers.lago-api-http.service=lago-api"
      - "traefik.http.routers.lago-api-http.priority=1000"
      - "traefik.http.routers.lago-api-http.middlewares=lago-cors"
      - "traefik.http.routers.lago-api-https.rule=Host(`api.lago.payday.cd`)"
      - "traefik.http.routers.lago-api-https.entrypoints=websecure"
      - "traefik.http.routers.lago-api-https.service=lago-api"
      - "traefik.http.routers.lago-api-https.priority=1000"
      - "traefik.http.routers.lago-api-https.tls=true"
      - "traefik.http.routers.lago-api-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.lago-api.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.lago-cors.headers.accessControlAllowOriginList=http://lago.payday.cd,https://lago.payday.cd,http://api.lago.payday.cd,https://api.lago.payday.cd"
      - "traefik.http.middlewares.lago-cors.headers.accessControlAllowHeaders=Content-Type,Authorization,X-Requested-With,apollographql-client-version,apollographql-client-name,x-lago-organization"
      - "traefik.http.middlewares.lago-cors.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.lago-cors.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.lago-cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.lago-cors.headers.addVaryHeader=true"

  thumbor:
    image: thumbororg/thumbor:latest
    container_name: payday-thumbor
    restart: unless-stopped
    ports:
      - "8888:8888"
    environment:
      - THUMBOR_LOG_LEVEL=DEBUG
      - THUMBOR_SECURITY_KEY=06ypcmaqfpku2z89w08jpa0o%5uy9vwsq2@7i)ierd=!jf@+g
      - THUMBOR_DETECTORS=['thumbor.detectors.face_detector', 'thumbor.detectors.feature_detector']
      - THUMBOR_FACE_DETECTOR_CASCADE_FILE=/usr/local/lib/python3.9/site-packages/cv2/data/haarcascade_frontalface_default.xml
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.thumbor-http.rule=Host(`thumbor.payday.cd`)"
      - "traefik.http.routers.thumbor-http.entrypoints=web"
      - "traefik.http.routers.thumbor-http.service=thumbor"
      - "traefik.http.routers.thumbor-http.priority=1000"
      - "traefik.http.routers.thumbor-https.rule=Host(`thumbor.payday.cd`)"
      - "traefik.http.routers.thumbor-https.entrypoints=websecure"
      - "traefik.http.routers.thumbor-https.service=thumbor"
      - "traefik.http.routers.thumbor-https.priority=1000"
      - "traefik.http.routers.thumbor-https.tls=true"
      - "traefik.http.routers.thumbor-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.thumbor.loadbalancer.server.port=8888"
    volumes:
      - ./thumbor/storage:/app/storage

  traefik:
    container_name: payday-traefik
    image: traefik:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certs:/letsencrypt
    environment:
      - DO_AUTH_TOKEN=dop_v1_e993d98c05e36b45741377626e163c0af5d5f78d2712a811081b1f8744b81ba4
    depends_on:
      - wordpress
      - minio
      - lago
      - saas
      - flower
      - thumbor
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-http.rule=Host(`traefik.payday.cd`)"
      - "traefik.http.routers.traefik-http.entrypoints=web"
      - "traefik.http.routers.traefik-http.service=api@internal"
      - "traefik.http.routers.traefik-http.priority=1000"
      - "traefik.http.routers.traefik-https.rule=Host(`traefik.payday.cd`)"
      - "traefik.http.routers.traefik-https.entrypoints=websecure"
      - "traefik.http.routers.traefik-https.service=api@internal"
      - "traefik.http.routers.traefik-https.priority=1000"
      - "traefik.http.routers.traefik-https.tls=true"
      - "traefik.http.routers.traefik-https.tls.certresolver=letsencrypt"

volumes:
  wordpress_data:
  postgres_data:
  mariadb_data:
  minio_data:
  traefik-certs: