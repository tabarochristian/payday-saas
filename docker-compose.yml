services:
  wordpress:
    container_name: payday-wordpress
    image: wordpress:latest
    restart: unless-stopped
    env_file:
      - wordpress.env
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mariadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=Host(`payday.cd`)"
      - "traefik.http.routers.wordpress.entrypoints=web"
      - "traefik.http.services.wordpress.loadbalancer.server.port=80"

  mariadb:
    container_name: payday-mariadb
    restart: unless-stopped
    image: mariadb:latest
    env_file:
      - wordpress.env
    volumes:
      - mariadb_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    expose:
      - 3306

  db:
    container_name: payday-db
    image: postgres:16
    restart: unless-stopped
    env_file:
      - db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgbouncer:
    container_name: payday-pgbouncer
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    ports:
      - "6432:6432"
    volumes:
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    env_file:
      - pgbouncer.env
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h db -p 5432"]
      interval: 30s
      timeout: 10s
      retries: 3

  saas:
    container_name: payday-saas
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: sh -c "daphne -b 0.0.0.0 -p 8000 payday.asgi:application"
    volumes:
      - ./payday:/app
    depends_on:
      - pgbouncer
      - redis
    env_file:
      - saas.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.saas.rule=HostRegexp(`{subdomain:.+}.payday.cd`) && !Host(`www.payday.cd`,`mariadb.payday.cd`,`pgbouncer.payday.cd`,`redis.payday.cd`,`celery.payday.cd`,`flower.payday.cd`,`n8n.payday.cd`,`uptime.payday.cd`,`minio.payday.cd`,`lago.payday.cd`)"
      - "traefik.http.routers.saas.entrypoints=web"
      - "traefik.http.services.saas.loadbalancer.server.port=8000"
      - "traefik.http.routers.saas.middlewares=websocket-headers"

  celery:
    container_name: payday-celery
    build:
      context: .
      dockerfile: payday/Dockerfile
    restart: unless-stopped
    command: celery -A payday worker -l INFO -E
    volumes:
      - ./payday:/app
    depends_on:
      - redis
      - saas
    env_file:
      - saas.env
    healthcheck:
      test: ["CMD", "celery", "-A", "payday", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  flower:
    container_name: payday-flower
    image: mher/flower:latest
    restart: unless-stopped
    command: ["celery", "flower", "--broker=redis://redis:6379/0", "--port=5555"]
    depends_on:
      - redis
      - celery
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.rule=Host(`flower.payday.cd`)"
      - "traefik.http.routers.flower.entrypoints=web"
      - "traefik.http.services.flower.loadbalancer.server.port=5555"

  redis:
    container_name: payday-redis
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  lago:
    container_name: payday-lago
    image: getlago/lago:latest
    restart: unless-stopped
    env_file:
      - saas.env
    depends_on:
      - pgbouncer
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lago.rule=Host(`lago.payday.cd`)"
      - "traefik.http.routers.lago.entrypoints=web"
      - "traefik.http.services.lago.loadbalancer.server.port=3000"

  n8n:
    container_name: payday-n8n
    image: n8nio/n8n:latest
    restart: unless-stopped
    env_file:
      - n8n.env
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - pgbouncer
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.payday.cd`)"
      - "traefik.http.routers.n8n.entrypoints=web"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  minio:
    container_name: payday-minio
    image: minio/minio:latest
    restart: unless-stopped
    env_file:
      - minio.env
    command: server /data --address :9000 --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-console.rule=Host(`minio.payday.cd`)"
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-bucket.rule=Host(`cdn.payday.cd`)"
      - "traefik.http.routers.minio-bucket.entrypoints=web"
      - "traefik.http.services.minio-bucket.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.middlewares=minio-large-body"
      - "traefik.http.routers.minio-bucket.middlewares=minio-large-body"
      - "traefik.http.middlewares.minio-large-body.buffering.maxRequestBodyBytes=1000000000"

  uptime:
    container_name: payday-uptime
    image: louislam/uptime-kuma:latest
    restart: unless-stopped
    volumes:
      - uptimekuma_data:/app/data
    env_file:
      - uptime.env
    depends_on:
      - saas
      - wordpress
      - lago
      - minio
      - celery
      - n8n
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime.rule=Host(`uptime.payday.cd`)"
      - "traefik.http.routers.uptime.entrypoints=web"
      - "traefik.http.services.uptime.loadbalancer.server.port=3001"

    traefik:
      container_name: payday-traefik
      image: traefik:latest
      restart: unless-stopped
      ports:
        - "80:80"
      volumes:
        - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
        - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro
      depends_on:
        - wordpress
        - saas
        - lago
        - minio
        - celery
        - n8n
        - uptime
        - flower
      healthcheck:
        test: ["CMD", "traefik", "healthcheck"]
        interval: 30s
        timeout: 10s
        retries: 3

volumes:
  uptimekuma_data:
  wordpress_data:
  postgres_data:
  mariadb_data:
  minio_data:
  n8n_data: