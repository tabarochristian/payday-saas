version: '3.8'

services:
  web:
    build: .
    restart: unless-stopped
    container_name: server
    command: >
      sh -c "python manage.py migrate && python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:80 payday.wsgi:application"
    volumes:
      - .:/app
    ports:
      - "80:80"
    depends_on:
      - slave
      - redis
    env_file:
      - .env.server

  worker:
    build: .
    restart: unless-stopped
    container_name: worker
    command: celery -A payday worker -l INFO -E
    volumes:
      - .:/app
    depends_on:
      - web
    env_file:
      - .env.worker

  master:
    image: bitnami/postgresql
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - master:/bitnami/postgresql
    environment:
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=slave
      - POSTGRESQL_REPLICATION_PASSWORD=payday
      - POSTGRESQL_USERNAME=master
      - POSTGRESQL_PASSWORD=payday
      - POSTGRESQL_DATABASE=payday
      - ALLOW_EMPTY_PASSWORD=yes
    depends_on:
      - minio-init

  slave:
    image: bitnami/postgresql
    restart: always
    ports:
      - '5433:5432'
    depends_on:
      - master
    environment:
      - POSTGRESQL_PASSWORD=payday
      - POSTGRESQL_MASTER_HOST=master
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=slave
      - POSTGRESQL_REPLICATION_PASSWORD=payday
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes

  #pgbouncer:
  #  image: edoburu/pgbouncer:latest
  #  container_name: pgbouncer
  #  restart: unless-stopped
  #  ports:
  #    - "6432:6432"
  #  volumes:
  #    - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
  #    - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
  #  environment:
  #    - DB_PASSWORD=payday
  #    - DB_HOST=master
  #    - DB_USER=payday
  #    - DB_PORT=5432
  #  depends_on:
  #    - slave
  
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_OPTS=--address :9000 --console-address :9001
    command: server /data --address :9000 --console-address ":9001"
    volumes:
      - minio:/data
      - ./bucket.sh:/docker-entrypoint-init.d/bucket.sh

  minio-init:
    build:
      context: .
      dockerfile: Miniofile
    depends_on:
      - minio
    environment:
      MINIO_BUCKET_NAME: payday
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

volumes:
  master:
  minio: