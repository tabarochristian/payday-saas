events {
    worker_connections 1024;
}

http {
    upstream master-saas {
        server saas:8000;
    }

    # Enable gzip compression
    gzip on;
    gzip_proxied any;
    server_tokens off;
    gzip_min_length 1000;
    client_max_body_size 10M;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
                    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Main domain (payday.cd) routes to Flask
    server {
        listen 80;
        listen 443 ssl http2;
        server_name payday.cd;

        ssl_certificate /etc/letsencrypt/live/payday.cd/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/payday.cd/privkey.pem;

        location / {
            proxy_pass http://landlord:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Improve proxy settings 
            proxy_redirect off; 
            proxy_buffering off; 
            proxy_read_timeout 300; 
            proxy_connect_timeout 300; 
            proxy_send_timeout 300;
        }
    }

    # MinIO subdomain (minio.payday.cd)
    server {
        listen 80;
        listen 443 ssl;
        server_name minio.payday.cd;

        ssl_certificate /etc/letsencrypt/live/payday.cd/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/payday.cd/privkey.pem;

        location / {
            proxy_pass http://minio:9001/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 1000M;

            # Improve proxy settings 
            proxy_redirect off; 
            proxy_buffering off; 
            proxy_read_timeout 300; 
            proxy_connect_timeout 300; 
            proxy_send_timeout 300;
        }
    }

    server {
        listen 80;
        listen 443 ssl;
        server_name cdn.payday.cd;

        ssl_certificate /etc/letsencrypt/live/payday.cd/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/payday.cd/privkey.pem;

        location / {
            proxy_pass http://minio:9000/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 1000M;

            # Improve proxy settings 
            proxy_redirect off; 
            proxy_buffering off; 
            proxy_read_timeout 300; 
            proxy_connect_timeout 300; 
            proxy_send_timeout 300;
        }
    }

    # Wildcard subdomain (*.payday.cd) routes to Django
    server {
        listen 80;
        listen 443 ssl http2;
        server_name ~^(?<subdomain>.+)\.payday\.cd$;

        ssl_certificate /etc/letsencrypt/live/payday.cd/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/payday.cd/privkey.pem;

        # Exclude specific subdomains (e.g., www, minio, landlord, "public") 
        if ($subdomain = "www") { 
            return 404; 
        } 
        if ($subdomain = "minio") { 
            return 404; 
        }
        if ($subdomain = "public") {
            return 404;
        }
        if ($subdomain = "device") {
            return 404;
        }
        if ($subdomain = "cdn") {
            return 404;
        }
        if ($subdomain = "landlord") {
            return 404;
        }

        location / {
            proxy_pass http://master-saas;  # Django container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Improve proxy settings 
            proxy_redirect off; 
            proxy_buffering off; 
            proxy_read_timeout 300; 
            proxy_connect_timeout 300; 
            proxy_send_timeout 300;
        }
    }

    # WebSocket server for *.device.payday.cd on port 7788
    server {
        listen 7788;
        server_name ~^(?<subdomain>.+)\.device\.payday\.cd$;

        location / {
            proxy_pass http://device:7788;  # Flask container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            # Improve proxy settings 
            proxy_redirect off; 
            proxy_buffering off; 
            proxy_read_timeout 300; 
            proxy_connect_timeout 300; 
            proxy_send_timeout 300;
        }
    }
}
