# Generated by Django 5.1.3 on 2024-12-12 12:56

import core.models.fields.ace_field
import core.models.fields.booleanfield
import core.models.fields.charfield
import core.models.fields.datefield
import core.models.fields.datetimefield
import core.models.fields.foreignkey
import core.models.fields.jsonfield
import core.models.fields.model_select_field
import core.models.fields.model_select_to_multiple_field
import core.models.fields.textfield
import core.utils.upload_directory_file
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import payroll.models.payroll
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0004_alter_job_frequency"),
        ("employee", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdvanceSalary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "approved",
                    core.models.fields.booleanfield.BooleanField(
                        default=False, editable=False, verbose_name="approuvé"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(
                        default=36, help_text="nombre de mois", verbose_name="durée"
                    ),
                ),
                ("amount", models.FloatField(verbose_name="montant")),
                ("date", core.models.fields.datefield.DateField(verbose_name="date")),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "employee",
                    core.models.fields.model_select_field.ModelSelectField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                        verbose_name="employé",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "avance sur salaire",
                "verbose_name_plural": "avances sur salaire",
            },
        ),
        migrations.CreateModel(
            name="AdvanceSalaryPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "approved",
                    core.models.fields.booleanfield.BooleanField(
                        default=False, editable=False, verbose_name="approuvé"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                ("amount", models.FloatField(verbose_name="montant")),
                ("date", models.DateField(verbose_name="date")),
                (
                    "advance_salary",
                    core.models.fields.model_select_field.ModelSelectField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payroll.advancesalary",
                        verbose_name="avance de salaire",
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "paiement d'avance de salaire",
                "verbose_name_plural": "paiements d'avance de salaire",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "approved",
                    core.models.fields.booleanfield.BooleanField(
                        default=False, editable=False, verbose_name="approuvé"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "type_of_item",
                    models.IntegerField(
                        choices=[(1, "Remunerative"), (-1, "Deductible")],
                        default=1,
                        verbose_name="type d'element",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=100, unique=True, verbose_name="code"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="nom")),
                (
                    "formula_qp_employer",
                    core.models.fields.ace_field.AceField(
                        default="0", verbose_name="formule/montant quote part employeur"
                    ),
                ),
                (
                    "formula_qp_employee",
                    core.models.fields.ace_field.AceField(
                        default="0", verbose_name="formule/montant quote part employee"
                    ),
                ),
                (
                    "condition",
                    core.models.fields.ace_field.AceField(
                        default="0", verbose_name="condition"
                    ),
                ),
                (
                    "time",
                    core.models.fields.ace_field.AceField(
                        default="0", verbose_name="temps"
                    ),
                ),
                (
                    "is_social_security",
                    models.BooleanField(
                        default=False,
                        help_text="Cet élément fera partie du seuil de sécurité sociale",
                        verbose_name="est éligible à la sécurité sociale",
                    ),
                ),
                (
                    "is_taxable",
                    models.BooleanField(
                        default=False,
                        help_text="Cet élément fera partie du montant brut imposable",
                        verbose_name="est impossable",
                    ),
                ),
                (
                    "is_bonus",
                    models.BooleanField(
                        default=False,
                        help_text="Cet élément est un bonus",
                        verbose_name="est une prime",
                    ),
                ),
                (
                    "is_payable",
                    models.BooleanField(
                        default=True,
                        help_text="Cet élément est payable",
                        verbose_name="est payable",
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "element de paie",
                "verbose_name_plural": "elements de paie",
            },
        ),
        migrations.CreateModel(
            name="LegalItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "approved",
                    core.models.fields.booleanfield.BooleanField(
                        default=False, editable=False, verbose_name="approuvé"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=100, unique=True, verbose_name="code"),
                ),
                (
                    "type_of_item",
                    models.IntegerField(
                        choices=[(1, "Remunerative"), (-1, "Deductible")],
                        default=-1,
                        verbose_name="type d'element",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="nom")),
                (
                    "formula_qp_employer",
                    core.models.fields.ace_field.AceField(
                        default="0", verbose_name="formule/montant quote part employeur"
                    ),
                ),
                (
                    "formula_qp_employee",
                    core.models.fields.ace_field.AceField(
                        default="0", verbose_name="formule/montant quote part employee"
                    ),
                ),
                (
                    "condition",
                    core.models.fields.ace_field.AceField(
                        default="0", verbose_name="condition"
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Retenue légale",
                "verbose_name_plural": "Retenues légales",
            },
        ),
        migrations.CreateModel(
            name="Payroll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "additional_items",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=core.utils.upload_directory_file,
                        verbose_name="éléments additionnels",
                    ),
                ),
                (
                    "canvas",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=core.utils.upload_directory_file,
                        verbose_name="canevas",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="nom")),
                ("start_dt", core.models.fields.datefield.DateField(verbose_name="du")),
                ("end_dt", core.models.fields.datefield.DateField(verbose_name="au")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("WARNING", "avertissement"),
                            ("PROGRESS", "en cours"),
                            ("SUCCESS", "succès"),
                        ],
                        default="PROGRESS",
                        editable=False,
                        max_length=25,
                        verbose_name="état",
                    ),
                ),
                (
                    "overall_net",
                    models.FloatField(
                        blank=True, default=0, editable=False, verbose_name="net global"
                    ),
                ),
                (
                    "approved",
                    models.BooleanField(default=False, verbose_name="approuvé"),
                ),
                (
                    "metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True,
                        default=payroll.models.payroll.Payroll._metadata,
                        verbose_name="meta",
                    ),
                ),
                (
                    "approvers",
                    core.models.fields.model_select_to_multiple_field.ModelSelect2Multiple(
                        to=settings.AUTH_USER_MODEL, verbose_name="approbateurs"
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "employee_branch",
                    core.models.fields.model_select_to_multiple_field.ModelSelect2Multiple(
                        blank=True,
                        help_text="laisser vide pour tous",
                        to="employee.branch",
                        verbose_name="site",
                    ),
                ),
                (
                    "employee_direction",
                    core.models.fields.model_select_to_multiple_field.ModelSelect2Multiple(
                        blank=True,
                        help_text="laisser vide pour tous",
                        to="employee.direction",
                        verbose_name="direction",
                    ),
                ),
                (
                    "employee_grade",
                    core.models.fields.model_select_to_multiple_field.ModelSelect2Multiple(
                        blank=True,
                        help_text="laisser vide pour tous",
                        to="employee.grade",
                        verbose_name="grade",
                    ),
                ),
                (
                    "employee_status",
                    core.models.fields.model_select_to_multiple_field.ModelSelect2Multiple(
                        blank=True,
                        help_text="laisser vide pour tous",
                        to="employee.status",
                        verbose_name="état",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "paie",
                "verbose_name_plural": "paies",
            },
        ),
        migrations.CreateModel(
            name="PaidEmployee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "approved",
                    core.models.fields.booleanfield.BooleanField(
                        default=False, editable=False, verbose_name="approuvé"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "social_security_number",
                    core.models.fields.charfield.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="numéro de sécurité sociale",
                    ),
                ),
                (
                    "registration_number",
                    core.models.fields.charfield.CharField(
                        max_length=50, verbose_name="matricule"
                    ),
                ),
                (
                    "date_of_join",
                    core.models.fields.datefield.DateField(
                        default=None,
                        help_text="YYYY-MM-DD",
                        null=True,
                        verbose_name="date d'engagement",
                    ),
                ),
                (
                    "middle_name",
                    core.models.fields.charfield.CharField(
                        blank=True,
                        default=None,
                        max_length=100,
                        null=True,
                        verbose_name="post-nom",
                    ),
                ),
                (
                    "first_name",
                    core.models.fields.charfield.CharField(
                        blank=True,
                        default=None,
                        max_length=100,
                        null=True,
                        verbose_name="prénom",
                    ),
                ),
                (
                    "last_name",
                    core.models.fields.charfield.CharField(
                        blank=True,
                        default=None,
                        max_length=100,
                        null=True,
                        verbose_name="nom",
                    ),
                ),
                (
                    "date_of_birth",
                    core.models.fields.datefield.DateField(
                        default=None,
                        help_text="YYYY-MM-DD",
                        null=True,
                        verbose_name="date de naissance",
                    ),
                ),
                (
                    "gender",
                    core.models.fields.charfield.CharField(
                        choices=[("male", "homme"), ("female", "femme")],
                        max_length=10,
                        verbose_name="genre",
                    ),
                ),
                (
                    "spouse_date_of_birth",
                    core.models.fields.datefield.DateField(
                        blank=True,
                        default=None,
                        help_text="YYYY-MM-DD",
                        null=True,
                        verbose_name="date de naissance du conjoint",
                    ),
                ),
                (
                    "spouse",
                    core.models.fields.charfield.CharField(
                        blank=True,
                        default=None,
                        max_length=100,
                        null=True,
                        verbose_name="conjoint",
                    ),
                ),
                (
                    "marital_status",
                    core.models.fields.charfield.CharField(
                        choices=[
                            ("maried", "marié"),
                            ("single", "célibataire"),
                            ("widower", "veuf"),
                        ],
                        max_length=12,
                        verbose_name="état civil",
                    ),
                ),
                (
                    "mobile_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        default=None,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="numéro de téléphone mobile",
                    ),
                ),
                (
                    "physical_address",
                    core.models.fields.textfield.TextField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="adresse physique",
                    ),
                ),
                (
                    "emergency_information",
                    core.models.fields.textfield.TextField(
                        default=None, null=True, verbose_name="informations d'urgence"
                    ),
                ),
                (
                    "payment_account",
                    core.models.fields.charfield.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="numéro de compte/paiement",
                    ),
                ),
                (
                    "payment_method",
                    core.models.fields.charfield.CharField(
                        choices=[
                            ("cash", "cash"),
                            ("bank", "bank"),
                            ("mobile Money", "mobile Money"),
                        ],
                        max_length=20,
                        verbose_name="mode de paiement",
                    ),
                ),
                (
                    "payer_name",
                    core.models.fields.charfield.CharField(
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="nom du payeur",
                    ),
                ),
                (
                    "comment",
                    core.models.fields.textfield.TextField(
                        blank=True, default=None, null=True, verbose_name="commentaire"
                    ),
                ),
                (
                    "agreement",
                    core.models.fields.model_select_field.ModelSelectField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.agreement",
                        verbose_name="type de contrat",
                    ),
                ),
                (
                    "branch",
                    core.models.fields.model_select_field.ModelSelectField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.branch",
                        verbose_name="site",
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "designation",
                    core.models.fields.model_select_field.ModelSelectField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.designation",
                        verbose_name="position",
                    ),
                ),
                (
                    "direction",
                    core.models.fields.model_select_field.ModelSelectField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.direction",
                        verbose_name="direction",
                    ),
                ),
                (
                    "grade",
                    core.models.fields.model_select_field.ModelSelectField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.grade",
                        verbose_name="grade",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "service",
                    core.models.fields.model_select_field.ModelSelectField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.service",
                        verbose_name="service",
                    ),
                ),
                (
                    "status",
                    core.models.fields.model_select_field.ModelSelectField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.status",
                        verbose_name="état",
                    ),
                ),
                (
                    "sub_direction",
                    core.models.fields.model_select_field.ModelSelectField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.subdirection",
                        verbose_name="sous-direction",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
                (
                    "payroll",
                    core.models.fields.model_select_field.ModelSelectField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="payroll.payroll",
                        verbose_name="paie",
                    ),
                ),
            ],
            options={
                "verbose_name": "employé rémunéré",
                "verbose_name_plural": "employés rémunéré",
                "ordering": ("-status", "registration_number"),
            },
        ),
        migrations.CreateModel(
            name="Payslip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "social_security_threshold",
                    models.FloatField(default=0, verbose_name="plafond cnss/cnsap"),
                ),
                (
                    "taxable_gross",
                    models.FloatField(default=0, verbose_name="brut imposable"),
                ),
                ("gross", models.FloatField(default=0, verbose_name="brut")),
                ("net", models.FloatField(default=0, verbose_name="net")),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "employee",
                    core.models.fields.model_select_field.ModelSelectField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="payroll.paidemployee",
                        verbose_name="employé",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "payroll",
                    core.models.fields.model_select_field.ModelSelectField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payroll.payroll",
                        verbose_name="paie",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "fiche de paie",
                "verbose_name_plural": "fiches de paie",
            },
        ),
        migrations.CreateModel(
            name="ItemPaid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "approved",
                    core.models.fields.booleanfield.BooleanField(
                        default=False, editable=False, verbose_name="approuvé"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "type_of_item",
                    models.IntegerField(
                        choices=[(1, "remunerative"), (-1, "deductible")],
                        default=1,
                        verbose_name="type d'element",
                    ),
                ),
                ("code", models.CharField(max_length=100, verbose_name="code")),
                ("name", models.CharField(max_length=100, verbose_name="nom")),
                ("time", models.FloatField(default=0, verbose_name="temps")),
                ("rate", models.FloatField(default=0, verbose_name="taux")),
                (
                    "amount_qp_employer",
                    models.FloatField(
                        default=0, verbose_name="montant quote part employeur"
                    ),
                ),
                (
                    "amount_qp_employee",
                    models.FloatField(
                        default=0, verbose_name="montant quote part employee"
                    ),
                ),
                (
                    "social_security_amount",
                    models.FloatField(
                        default=0, verbose_name="plafond de la sécurité sociale"
                    ),
                ),
                (
                    "taxable_amount",
                    models.FloatField(default=0, verbose_name="montant imposable"),
                ),
                (
                    "is_bonus",
                    models.BooleanField(
                        default=False,
                        help_text="Cet élément est un bonus",
                        verbose_name="est une prime",
                    ),
                ),
                (
                    "is_payable",
                    models.BooleanField(
                        default=True,
                        help_text="Cet élément est payable",
                        verbose_name="est payable",
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
                (
                    "payslip",
                    core.models.fields.model_select_field.ModelSelectField(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payroll.payslip",
                        verbose_name="fiche de paie",
                    ),
                ),
            ],
            options={
                "verbose_name": "element payé",
                "verbose_name_plural": "elements payé",
            },
        ),
        migrations.CreateModel(
            name="SpecialEmployeeItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "approved",
                    core.models.fields.booleanfield.BooleanField(
                        default=False, editable=False, verbose_name="approuvé"
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "amount_qp_employer",
                    models.FloatField(
                        blank=True,
                        default=None,
                        help_text="laisser vide pour utiliser la formule de l'element",
                        null=True,
                        verbose_name="montant qp employeur",
                    ),
                ),
                (
                    "amount_qp_employee",
                    models.FloatField(
                        blank=True,
                        default=None,
                        help_text="laisser vide pour utiliser la formule de l'element",
                        null=True,
                        verbose_name="montant qp employé",
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "employee",
                    core.models.fields.model_select_field.ModelSelectField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.employee",
                        verbose_name="employee",
                    ),
                ),
                (
                    "item",
                    core.models.fields.model_select_field.ModelSelectField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="payroll.item",
                        verbose_name="element de paie",
                    ),
                ),
                (
                    "organization",
                    core.models.fields.foreignkey.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "element special pour l'employé",
                "verbose_name_plural": "element special pour l'employé",
            },
        ),
    ]
