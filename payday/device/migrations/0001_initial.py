# Generated by Django 5.1.3 on 2025-05-29 06:21

import core.models.fields.charfield
import core.models.fields.datetimefield
import core.models.fields.jsonfield
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "status",
                    core.models.fields.charfield.CharField(
                        default="disconnected",
                        editable=False,
                        max_length=255,
                        verbose_name="État",
                    ),
                ),
                (
                    "sn",
                    core.models.fields.charfield.CharField(
                        max_length=255, unique=True, verbose_name="Serial Number"
                    ),
                ),
                (
                    "name",
                    core.models.fields.charfield.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Device Name",
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "terminal",
                "verbose_name_plural": "terminals",
            },
        ),
        migrations.CreateModel(
            name="Log",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "_metadata",
                    core.models.fields.jsonfield.JSONField(
                        blank=True, default=dict, verbose_name="metadata"
                    ),
                ),
                (
                    "updated_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now=True, verbose_name="mis à jour le/à"
                    ),
                ),
                (
                    "created_at",
                    core.models.fields.datetimefield.DateTimeField(
                        auto_now_add=True, verbose_name="créé le/à"
                    ),
                ),
                (
                    "sn",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Serial Number"
                    ),
                ),
                ("timestamp", models.DateTimeField(verbose_name="Timestamp")),
                ("enroll_id", models.IntegerField(verbose_name="Enroll ID")),
                (
                    "mode",
                    models.IntegerField(
                        choices=[
                            (0, "Fingerprint"),
                            (1, "Card"),
                            (2, "Mot de passe"),
                            (8, "Face"),
                        ],
                        verbose_name="Verification Mode",
                    ),
                ),
                (
                    "in_out",
                    models.IntegerField(
                        choices=[(0, "In"), (1, "Out")], verbose_name="Entry Type"
                    ),
                ),
                ("event", models.IntegerField(verbose_name="Event Type")),
                (
                    "verify_mode",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Verify Mode"
                    ),
                ),
                (
                    "temperature",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Temperature"
                    ),
                ),
                (
                    "image",
                    models.TextField(blank=True, null=True, verbose_name="Punch Image"),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créé par",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        on_update=True,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="mis à jour par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log",
                "verbose_name_plural": "Logs",
                "indexes": [
                    models.Index(
                        fields=["sn", "timestamp"], name="device_log_sn_8e1b0f_idx"
                    )
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("sn", "timestamp", "enroll_id", "in_out"),
                        name="unique_attendance_log",
                    )
                ],
                "unique_together": {("sn", "timestamp", "enroll_id", "in_out")},
            },
        ),
    ]
