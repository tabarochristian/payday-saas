[
    {
        "model": "core.widget",
        "fields": {
            "_metadata": {},
            "updated_by": 1,
            "created_by": 1,
            "updated_at": "2025-02-02T15:06:00.318Z",
            "created_at": "2025-02-02T14:18:40.699Z",
            "content_type": 22,
            "column": "col-md-12 col-xs-12",
            "name": "quota",
            "template": "<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <h1>\r\n            {{ value }}\r\n            <small>/{{ max_ }}</small>\r\n        </h1>\r\n        <small>Employee</small>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div class=\"progress\">\r\n          <div class=\"progress-bar\" role=\"progressbar\" style=\"width: {{ percentage }}%;\" aria-valuenow=\"{{ percentage }}\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{ percentage }}%</div>\r\n        </div>\r\n    </div>\r\n</div>",
            "view": "from core.middleware import TenantMiddleware\r\nfrom employee.models import Employee\r\n\r\nvalue = Employee.objects.all().count()\r\ntenant = TenantMiddleware.get_tenant()\r\n\r\nmax_ = tenant.get('max_employee', value)\r\npercentage = int(value * 100 / max_)",
            "is_active": true
        }
    },
    {
        "model": "core.widget",
        "fields": {
            "_metadata": {},
            "updated_by": 1,
            "created_by": 1,
            "updated_at": "2025-02-02T14:46:24.888Z",
            "created_at": "2025-02-02T14:20:57.069Z",
            "content_type": 30,
            "column": "col-md-12 col-xs-12",
            "name": "presence",
            "template": "{% load i18n %}\r\n{% load static %}\r\n\r\n{% get_current_language as LANGUAGE_CODE %}\r\n\r\n<div class=\"card\">\r\n    <div id=\"attendances-chart\"></div>\r\n    {{ attendances|json_script:'attendances' }}\r\n    <script src=\"{% static 'assets/extensions/apexcharts/apexcharts.min.js' %}\"></script>\r\n    <script>\r\n        const getMonthName = monthNumber => new Date(0, monthNumber).toLocaleString('{{ LANGUAGE_CODE }}', { month: 'long' });\r\n        const attendances = JSON.parse(document.getElementById('attendances').textContent).map((e) => ({\r\n            date: new Date(e.checked_at__date),\r\n            count: e.attended,\r\n        }));\r\n\r\n        new ApexCharts(document.querySelector('#attendances-chart'), {\r\n            series: Array.from({ length: 12 }, (value, index) => index).map(function (month) {\r\n                return {\r\n                    name: getMonthName(month),\r\n                    data: Array.from({ length: 31 }, (value, index) => index+1).map(function(day) {\r\n                        let y = attendances.find((item) => item.date.getMonth() === month && item.date.getDate() === day)\r\n                        return {x: String(day), y: y?y.count:0}\r\n                    })\r\n                }\r\n            }),\r\n            chart: {\r\n                height: 250,\r\n                type: 'heatmap'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            colors: ['#008FFB']\r\n        }).render();\r\n    </script>\r\n</div>",
            "view": "from employee.models import Attendance\r\nfrom django.db import models\r\n\r\nattendances = Attendance.objects.all().values('checked_at__date')\r\nattendances = attendances.annotate(attended=models.Count('id'))\r\nattendances = attendances.filter(attended__gte=1)\r\nattendances = list(attendances)",
            "is_active": true
        }
    },
    {
        "model": "core.widget",
        "fields": {
            "_metadata": {},
            "updated_by": 1,
            "created_by": 1,
            "updated_at": "2025-02-02T14:47:51.036Z",
            "created_at": "2025-02-02T14:26:03.074Z",
            "content_type": 20,
            "column": "col-md-12 col-xs-12",
            "name": "terminaux",
            "template": "{% if qs %}\r\n<div class=\"row\">\r\n    {% for obj in qs %}\r\n    <div class=\"col\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h4>{{ obj.status|title }}</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <h3>{{ obj.count }}</h3>\r\n                <small>Terminal de presence</small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    {% endfor %}\r\n</div>\r\n{% endif %}",
            "view": "from employee.models import Device\r\nfrom django.db.models import Count\r\n\r\nqs = Device.objects.all().values('status')\r\nqs = qs.annotate(count=Count('status'))\r\nqs = qs.order_by('-count')",
            "is_active": true
        }
    },
    {
        "model": "core.widget",
        "fields": {
            "_metadata": {},
            "updated_by": 1,
            "created_by": 1,
            "updated_at": "2025-02-02T16:03:54.057Z",
            "created_at": "2025-02-02T15:35:10.018Z",
            "content_type": 32,
            "column": "col-md-12 col-xs-12",
            "name": "avance sur salaire",
            "template": "<h4>Avance sur salaire</h4>\r\n\r\n<div class=\"row\">\r\n    {% for obj in qs  %}\r\n    <div class=\"col\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h5>{{ obj.total_amount }}</h5>\r\n                <small>{{ obj.month }}</small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    {% endfor %}\r\n</div>",
            "view": "from django.db.models import Case, When, Value, CharField, Sum\r\nfrom payroll.models import AdvanceSalaryPayment\r\nfrom django.utils import timezone\r\n\r\nnow = timezone.now()\r\nmonth = now.month\r\n\r\nadj = lambda current_month, increment: (current_month + increment - 1) % 12 + 1\r\nmonths = [adj(month, i) for i in range(month, 6)]\r\n\r\nqs = AdvanceSalaryPayment.objects.filter(**{\r\n    'date__month__in': months,\r\n    'date__year': now.year\r\n}).annotate(\r\n    month=Case(\r\n        When(date__month=1, then=Value('January')),\r\n        When(date__month=2, then=Value('February')),\r\n        When(date__month=3, then=Value('March')),\r\n        When(date__month=4, then=Value('April')),\r\n        When(date__month=5, then=Value('May')),\r\n        When(date__month=6, then=Value('June')),\r\n        When(date__month=7, then=Value('July')),\r\n        When(date__month=8, then=Value('August')),\r\n        When(date__month=9, then=Value('September')),\r\n        When(date__month=10, then=Value('October')),\r\n        When(date__month=11, then=Value('November')),\r\n        When(date__month=12, then=Value('December')),\r\n        output_field=CharField(),\r\n    )\r\n).values('month').annotate(\r\n    total_amount=Sum('amount')\r\n).values('month', 'total_amount')",
            "is_active": true
        }
    },
    {
        "model": "core.widget",
        "fields": {
            "_metadata": {},
            "updated_by": 1,
            "created_by": 1,
            "updated_at": "2025-02-02T20:30:02.529Z",
            "created_at": "2025-02-02T15:58:43.815Z",
            "content_type": 37,
            "column": "col-md-12 col-xs-12",
            "name": "paie",
            "template": "{% load static %}\r\n<script src=\"{% static 'assets/extensions/apexcharts/apexcharts.min.js' %}\"></script>\r\n<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <h4>Paie(s)</h4>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div id=\"payroll-chart\"></div>\r\n    </div>\r\n    {{ payrolls|json_script:'payrolls' }}\r\n    <script>\r\n        const payrolls = JSON.parse(document.getElementById('payrolls').textContent);\r\n        \r\n        var options = {\r\n              series: [{\r\n              name: 'Net',\r\n              data: payrolls.map(item => item.net)\r\n            }],\r\n              chart: {\r\n              type: 'bar',\r\n              height: 350\r\n            },\r\n            xaxis: {\r\n              categories: payrolls.map(item => item.month),\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(document.querySelector(\"#payroll-chart\"), options);\r\n        chart.render();\r\n    </script>\r\n</div>",
            "view": "from django.db.models import Case, When, Value, CharField, Sum\r\nfrom payroll.models import *\r\n\r\npayrolls = Payroll.objects.all().annotate(\r\n    month=Case(\r\n        When(start_dt__month=1, then=Value('January')),\r\n        When(start_dt__month=2, then=Value('February')),\r\n        When(start_dt__month=3, then=Value('March')),\r\n        When(start_dt__month=4, then=Value('April')),\r\n        When(start_dt__month=5, then=Value('May')),\r\n        When(start_dt__month=6, then=Value('June')),\r\n        When(start_dt__month=7, then=Value('July')),\r\n        When(start_dt__month=8, then=Value('August')),\r\n        When(start_dt__month=9, then=Value('September')),\r\n        When(start_dt__month=10, then=Value('October')),\r\n        When(start_dt__month=11, then=Value('November')),\r\n        When(start_dt__month=12, then=Value('December')),\r\n        output_field=CharField(),\r\n    )\r\n).values('month').annotate(\r\n    net=Sum('overall_net')\r\n).values('month', 'net')\r\npayrolls = list(payrolls)",
            "is_active": true
        }
    }
]
