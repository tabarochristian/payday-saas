[{"name": "Statistiques des salari\u00e9s par direction", "column": "col-md-12 col-xs-12", "template": "<div id=\"employees_by_directions_chart\"></div>\r\n{{ employees_by_directions|json_script:'employees_by_directions' }}\r\n<script>\r\n    var employees_by_directions = JSON.parse(document.getElementById('employees_by_directions').textContent);\r\n    const directionNames = employees_by_directions.map(entry => entry.direction__name);\r\n    const countsDirection = employees_by_directions.map(entry => entry.count);\r\n\r\n    employees_by_directions = new ApexCharts(document.querySelector('#employees_by_directions_chart'), {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 400,\r\n        },\r\n        xaxis: {\r\n            categories: directionNames,\r\n        },\r\n        series: [{\r\n            name: 'Count',\r\n            data: countsDirection,\r\n        }],\r\n    });\r\n    employees_by_directions.render();\r\n</script>", "view": "from employee.models import Employee\r\nfrom django.db.models import Count\r\n\r\nemployees = Employee.objects.all().select_related().prefetch_related()\r\nemployees_by_directions = employees.values('direction__name').annotate(count=Count('direction__name'))\r\nemployees_by_directions = employees_by_directions.filter(count__gt=0)\r\nemployees_by_directions = list(employees_by_directions)", "permissions": [{"codename": "view_employee", "content_type__app_label": "employee", "content_type__model": "employee"}]}, {"name": "Statistiques des salari\u00e9s par statut", "column": "col-md-12 col-xs-12", "template": "<div id=\"employees_by_statues_chart\"></div>\r\n{{ employees_by_statues|json_script:'employees_by_statues' }}\r\n<script>\r\n    var employees_by_statues = JSON.parse(document.getElementById('employees_by_statues').textContent);\r\n    const statusNames = employees_by_statues.map(entry => entry.status__name);\r\n    const countsStatus = employees_by_statues.map(entry => entry.count);\r\n\r\n    employees_by_statues = new ApexCharts(document.querySelector('#employees_by_statues_chart'), {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 400,\r\n        },\r\n        xaxis: {\r\n            categories: statusNames,\r\n        },\r\n        series: [{\r\n            name: 'Count',\r\n            data: countsStatus,\r\n        }],\r\n    });\r\n    employees_by_statues.render();\r\n</script>", "view": "from employee.models import Employee\r\nfrom django.db.models import Count\r\n\r\nemployees = Employee.objects.all().select_related().prefetch_related()\r\nemployees_by_statues = employees.values('status__name').annotate(count=Count('status__name'))\r\nemployees_by_statues = employees_by_statues.filter(count__gt=0)\r\nemployees_by_statues = list(employees_by_statues)", "permissions": [{"codename": "view_employee", "content_type__app_label": "employee", "content_type__model": "employee"}]}, {"name": "Conge", "column": "col-md-8 col-xs-12", "template": "<div class=\"row\">\r\n    {% for leave in leaves %}\r\n    <div class=\"col\">\r\n        <h3>{{ leave.total_days_taken }}<small class=\"text-muted\">/{{ leave.type_of_leave__max_days_per_year }}</small></h3>\r\n        <h5>{{ leave.type_of_leave__name }}</h5>\r\n    </div>\r\n    {% endfor %}\r\n</div>", "view": "from django.db.models import Q, Sum\r\nfrom django.utils import timezone\r\nfrom leave.models import Leave\r\n\r\ntoday = timezone.now().date()\r\nmonth = today.month\r\nyear = today.year\r\n\r\nleaves = Leave.objects.filter(\r\n    Q(start_dt__month=month, start_dt__year=year) | \r\n    Q(end_dt__month=month, end_dt__year=year)\r\n).filter(\r\n    approved=True\r\n).values(\r\n    'type_of_leave__name', \r\n    'type_of_leave__max_days_per_year'\r\n).annotate(\r\n    total_days_taken=Sum('days')\r\n)\r\n\r\nprint(leaves)", "permissions": [{"codename": "view_leave", "content_type__app_label": "leave", "content_type__model": "leave"}]}, {"name": "Sanction", "column": "col-md-4 col-xs-12", "template": "<div id=\"sanction_pie_chart\"></div>\r\n{{ sanctions|json_script:'sanctions' }}\r\n\r\n<script>\r\n    var sanctions = JSON.parse(document.getElementById('sanctions').textContent);\r\n\r\nvar options = {\r\n    series: sanctions.map(entry => entry.count),\r\n    chart: {\r\n        type: 'pie',\r\n    },\r\n    labels: sanctions.map(entry => entry.type_of_sanction__name),\r\n};\r\n\r\nsanctions = new ApexCharts(document.querySelector(\"#sanction_pie_chart\"), options).render();\r\n</script>", "view": "from sanction.models import Sanction\r\nfrom django.db.models import Count\r\nfrom django.utils import timezone\r\n\r\n\r\ntoday = timezone.now().date()\r\n\r\nsanctions = Sanction.objects.filter(\r\n    created_at__year=today.year,\r\n    #approved=True\r\n).values(\r\n    'type_of_sanction__name',\r\n).annotate(\r\n    count=Count('type_of_sanction')\r\n)\r\n\r\nsanctions = list(sanctions)", "permissions": [{"codename": "view_sanction", "content_type__app_label": "sanction", "content_type__model": "sanction"}]}, {"name": "Presence", "column": "col-md-12 col-xs-12", "template": "<div id=\"attendances-chart\"></div>\r\n{{ self.attendances|json_script:'attendances' }}\r\n<script>\r\n    const getMonthName = monthNumber => new Date(0, monthNumber - 1).toLocaleString('{{ LANGUAGE_CODE }}', { month: 'long' });\r\n    const capitalize = (str) => str[0].toUpperCase() + str.slice(1);\r\n    const attendances = JSON.parse(document.getElementById('attendances').textContent).map((e) => ({\r\n        date: new Date(e.date),\r\n        count: e.count,\r\n    }));\r\n\r\n    new ApexCharts(document.querySelector('#attendances-chart'), {\r\n        series: Array.from({ length: 12 }, (value, index) => index+1).map(function (month){\r\n            return {\r\n                name: capitalize(getMonthName(month)),\r\n                data: Array.from({ length: 31 }, (value, index) => index+1).map(function(day){\r\n                    let y = attendances.find((item) => (item.date.getMonth()+1) === month && item.date.getDate() === day)\r\n                    return {x: String(day), y: y?y.count:0}\r\n                })\r\n            }\r\n        }),\r\n        chart: {\r\n            height: 350,\r\n            type: 'heatmap'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#008FFB'],\r\n        title: {\r\n            text: 'Presence',\r\n            align: 'center'\r\n        },\r\n    }).render();\r\n</script>", "view": "attendances = []", "permissions": []}]